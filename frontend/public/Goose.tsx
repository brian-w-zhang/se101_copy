/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 goose.glb --types 
Author: Innovation Studio (https://sketchfab.com/cmp_innovation_studio)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/canada-goose-50f4ace96846465f85f2e9a9f5c84453
Title: Canada Goose
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['material_0-material']: THREE.Mesh
  }
  materials: {
    material_0: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/goose.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes['material_0-material'].geometry} material={materials.material_0} position={[0, -0.028, 0]} rotation={[0.979, 0.759, 0.48]} />
      </group>
    </group>
  )
}

useGLTF.preload('/goose.glb')
